{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,KAAMJ,SAASC,cAAc,UAGzBI,EAAO,CACXN,WAAY,EACZG,UAAW,EACXC,YAAa,GAcf,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,IACLN,EACKI,EAAQjB,EAAAoB,OAAOC,QAAQ,uBAAqBV,QAAiBC,QAG7DM,EAAOlB,EAAAoB,OAAOE,QAAQ,sBAAoBX,QAAeC,SAEjEA,EAAM,G,CArBbV,EAAKM,KAAKe,iBAAiB,UAE3B,SAAsBC,GAGpB,GAFAA,EAAEC,iBAiCJ,WACEhB,EAAKN,WAAauB,OAAOxB,EAAKC,WAAWwB,OACzClB,EAAKH,UAAYoB,OAAOxB,EAAKI,UAAUqB,OACvClB,EAAKF,YAAcmB,OAAOxB,EAAKK,YAAYoB,M,CAnC3CC,GACInB,EAAKN,WAAa,GAAKM,EAAKH,UAAY,GAAKG,EAAKF,aAAe,EACnE,OAAOP,EAAAoB,OAAOS,KAAK,+BAmBvB,UAAiC1B,WAACA,EAAUG,UAAEA,EAASC,YAAEA,IACvD,IAAIK,EAAQT,EAEZ,IAAK,IAAIQ,EAAW,EAAGA,GAAYJ,EAAaI,IAAY,CAEpCD,EAAcC,EAAUC,GAChCkB,MAAKC,GAAWA,IAAWC,OAAMC,GAASA,IACxDrB,GAASN,C,EAxBY4B,CAACzB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  delayStep: document.querySelector('input[name=\"step\"]'),\n  delayAmount: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nconst data = {\n  firstDelay: 0,\n  delayStep: 0,\n  delayAmount: 0,\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  getData();\n  if (data.firstDelay < 0 || data.delayStep < 0 || data.delayAmount <= 0) {\n    return Notify.info('Введите данные больше нуля');\n  }\n  createPromiseFromParams(data);   \n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        return resolve(Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n        \n      } else {\n        return reject(Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n  });\n}\n\nfunction createPromiseFromParams({firstDelay, delayStep, delayAmount}) {\n  let delay = firstDelay;\n  \n  for (let position = 1; position <= delayAmount; position++) {\n    \n    const handlePromise = createPromise(position, delay);\n    handlePromise.then(onSuccess=>onSuccess).catch(onError=>onError)\n    delay += delayStep;\n  } \n}\n\nfunction getData() {\n  data.firstDelay = Number(refs.firstDelay.value);\n  data.delayStep = Number(refs.delayStep.value);\n  data.delayAmount = Number(refs.delayAmount.value);\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","firstDelay","document","querySelector","delayStep","delayAmount","form","$47d4ff9957288465$var$data","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Notify","success","failure","addEventListener","e","preventDefault","Number","value","$47d4ff9957288465$var$getData","info","then","onSuccess","catch","onError","$47d4ff9957288465$var$createPromiseFromParams"],"version":3,"file":"03-promises.8861d2f9.js.map"}
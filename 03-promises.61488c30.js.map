{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,IACLN,EACKI,EAAQT,EAAAY,OAAOC,QAAQ,uBAAqBV,QAAiBC,QAG7DM,EAAOV,EAAAY,OAAOE,QAAQ,sBAAoBX,QAAeC,SAEjEA,EAAM,G,EAlCA,CACXW,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,KAAMJ,SAASC,cAAc,WAG1BG,KAAKC,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAGqB,MAAjBH,EAAOE,EAAEE,cACTT,EAAaK,EAAKK,SAASrB,MAAMsB,MACjCR,EAAYE,EAAKK,SAASE,KAAKD,MAC/BP,EAAcC,EAAKK,SAASG,OAAOF,MAEzC,GAAIX,EAAa,GAAKG,EAAY,GAAKC,GAAe,EACpD,OAAOnB,EAAAY,OAAOiB,KAAK,+BAmBvB,UAAiCd,WAACA,EAAUG,UAAEA,EAASC,YAAEA,IACvD,IAAIf,EAAQW,EAEZ,IAAK,IAAIZ,EAAW,EAAGA,GAAYgB,EAAahB,IAAY,CAEpCD,EAAcC,EAAUC,GAChC0B,MAAKC,GAAWA,IAAWC,OAAMC,GAASA,IACxD7B,GAASc,C,EAxBYgB,CAAC,C,WAACnB,E,UAAYG,E,YAAWC,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  delayStep: document.querySelector('input[name=\"step\"]'),\n  delayAmount: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  // получаем введённые данные\n  const form = e.currentTarget;\n  const firstDelay = form.elements.delay.value;\n  const delayStep = form.elements.step.value;\n  const delayAmount = form.elements.amount.value;\n\n  if (firstDelay < 0 || delayStep < 0 || delayAmount <= 0) {\n    return Notify.info('Введите данные больше нуля');\n  }\n  createPromiseFromParams({firstDelay, delayStep, delayAmount});   \n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        return resolve(Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n        \n      } else {\n        return reject(Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n  });\n}\n\nfunction createPromiseFromParams({firstDelay, delayStep, delayAmount}) {\n  let delay = firstDelay;\n  \n  for (let position = 1; position <= delayAmount; position++) {\n    \n    const handlePromise = createPromise(position, delay);\n    handlePromise.then(onSuccess=>onSuccess).catch(onError=>onError)\n    delay += delayStep;\n  } \n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Notify","success","failure","firstDelay","document","querySelector","delayStep","delayAmount","form","addEventListener","e","preventDefault","currentTarget","elements","value","step","amount","info","then","onSuccess","catch","onError","$47d4ff9957288465$var$createPromiseFromParams"],"version":3,"file":"03-promises.61488c30.js.map"}